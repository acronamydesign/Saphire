saphireRouter = require('./admin-routes/express-short-route.js'),
	express = require('express'),
	saphire = require('saphire').adminMenu,
	util = require('./utils.js');

var adminMenuEnabled = ["dashboard", "regions", "appearance", "plugins", "status", "themes"],
	adminIndex = {},
	purposes = {}

for (item in adminMenuEnabled) {
	var enabled = adminMenuEnabled;
	var $$ = enabled[item];

	//setup the admin index redirect
	if (saphire[$$].hasOwnProperty('adminIndex')) {
		var adminIndexAlias = saphire[$$]["adminIndex"] = saphire[$$]["menuEntry"]["href"];
		var adminIndexUrl = "/admin";
		adminIndex['url'] = adminIndexUrl;
		adminIndex['alias'] = adminIndexAlias;

		//setup the assignment
		var targetAdminIndex = saphire[$$]["name"]
	}

	//build the purposes array to be automatically pushed into routes
	purposes[$$] = {}
	purposes[$$]["url"] = saphire[$$]["menuEntry"]["href"]

	//Purposes
	purposes[$$]["data"] = {}
	var purposeData = purposes[$$]["data"];
	util.appendData(purposeData, {
		purpose: saphire[$$]["name"],
		title: saphire[$$]["menuEntry"]["title"],
		version: saphire[$$]['version']
	});

}
var select = util.purposeSelector.bind(purposes)


//TO DO
//Unique data - should move this sort of logic to the module it belongs to

util.appendData(select("dashboard"), {
	description: "Sapire administration module"
});
util.appendData(select("regions"), {
	description: "Mange blocks and regions of your project",
	regionsList: ["fake region", "fake region 1", "fake region 2"]
});

//console.log(saphire)


var adminTemplate = __dirname + "/admin-views/admin.jade";
var saphireAdmin = {

	routes: function (app, regions) {

		//install assets
		app.use('/admin/css', express.static(__dirname + '/admin-views/styles/'));
		//if installed or not

		app.locals.installState = false;


app.get(adminIndex.url, function (req, res) {
					res.redirect(adminIndex.alias);
				});
				//set styles path for admin

				//easier route creation
				var i = 0;
				for (purpose in purposes) {
					var purposeUrl = purposes[purpose]["url"]
					var purposeData = purposes[purpose]["data"]
						//adding some extra props
					if (purposes["regions"]) {
						purposes["regions"]["data"]["availableRegions"] = regions
					}
					purposeData.availablePurposes = Object.keys(purposes)
					saphireRouter.create(app, {
						url: purposeUrl,
						template: adminTemplate
					}, purposeData);
					//console.log(purposeData)
				}

	}

}

module.exports = saphireAdmin;
