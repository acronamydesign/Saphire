var map = require('./src.map.js'),
		globals = require('./models/globals.js'),
		initialSetup = require('./models/theme-setup.js'),
		allThemes = require('./models/index-theme.js'),
		parseRegions = require('./models/regions.js'),
		render = require('./jade-helpers/func-render.js');

var setTheme = "Saphire",
		entryPoint = "info.js"



//this is a bit of a loop really it returns back to source :/
var saphire = {
	use: function(publicPath) {
		console.log(this.setTheme)
		if(publicPath){
			var publicPath = publicPath;
		}
		else if(publicPath && /\//ig.test(publicPath)){
			var publicPath = publicPath.match(/[^,./]/g).join("")
		}
		else{//nullify
			var publicPath = "";
		}
		this.path = publicPath // add to this object scope
		this.deployTheme() //run the next function
	},

	deployTheme:function(){

		var getTheme = setTheme.toLowerCase()
		var themeList = allThemes(this.path),
				themeIndex = themeList.indexOf(getTheme);

		//error trap
		if(themeList[themeIndex]){

			//parse theme data
			var initiatedTheme = initialSetup(this.path)+"/"+themeList[themeIndex]+"/"+entryPoint;
			this.regionData = parseRegions(initiatedTheme);

		}
		else{
			console.log("Cannot locate theme: '"+setTheme+"'\nExpected at: '"+ initialSetup(publicPath)+ "'\nYou should create a folder with the name '"+setTheme+"' at this location.")
		}
	},

	render:function(str){
		var region = this["regionData"][str];
		return "<"+region['wrapper']+" class='"+region['class']+"' "+region['dataFormatted']+">"+region['blocks']+"</"+region['wrapper']+">"
	}

}


module.exports = saphire
