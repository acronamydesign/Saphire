var saphireApi = require("saphire").functions,
		mongoose = saphireApi.db.mongoose,
		saphireData = require("saphire").data,
		saphireModels = saphireData.models,
		fs = require("fs"),
		path = require("path"),
		jade = require("jade");

//local functions may make it into api?
function blockSelector(str,itterate,fn){
	if(str == itterate) return fn();
}
function content(data){
	return data;
}

var blocksTemplatePath = path.resolve(__dirname,"../system/blocks"),
		blocksLogicPath = path.resolve(__dirname,"../system/logic"),
		blocksTemplates = fs.readdirSync(blocksTemplatePath),
		templatesMarkup = {}


for(template in blocksTemplates){

	var key = saphireApi.machineName(blocksTemplates[template],"file")
	var markup = jade.compileFile(blocksTemplatePath+"/"+blocksTemplates[template]);
	templatesMarkup[key] = markup()


	//if a template is required, when the itteration matches the machine name run a function to require logic and the template
	blockSelector("admin_menu",key,function(){
		require(blocksLogicPath+"/admin-menu.js")(templatesMarkup[key])
	});

}

//console.log(templatesMarkup)
