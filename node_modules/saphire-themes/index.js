var fs = require("fs"),
		jade = require("jade"),
		exportable = [],
		saphireData = require("saphire").data,
		saphireApi = require("saphire").functions,
		saphireModels = saphireData.models,
		saphireBlocks = saphireModels.blocks,
		express = require("express"),
		mongoose = saphireApi.db.mongoose

var setTheme = saphireApi.useData("app",saphireData.activeThemes),
		adminTheme = saphireApi.useData("admin",saphireData.activeThemes),
		entryPoint = saphireApi.useData("entry",saphireData.activeThemes)

//loop all of this back.

function saphireThemes(){
	this.use = function(app, theme){
		saphireData["publicPath"]["new"] = __dirname+"/system"
		this.initTheme = theme;
		this.app = app;
		this.path = saphireApi.useData("temp",saphireData.publicPath);
		return this.deployTheme() //run the next function
	},

	this.deployTheme = function(){

		var setTheme = this.initTheme;

		var deployTheme = require("./actions/deploy-theme.js")
		this.theme = deployTheme(this.path, this.initTheme, entryPoint)
		//initialize
		return this.init()
	},

	this.init = function(){
		//important stuff

		var app = this.app,
				currentTheme = saphireApi.useData("temp",saphireData.publicPath)+"themes/"+this.initTheme.toLowerCase()

			//set new views dir to system templates
			app.set("views",__dirname+"/system");
console.log(__dirname+"/system/libraries")
			app.use("/lib", express.static(__dirname+"/system/libraries/"))

		var indexTheme = require("./actions/theme-index.js");
		//all files in active theme
		var files = indexTheme(currentTheme)


		//get a list of system templates
		var systemTemplates = require("./actions/templates-system.js")
		var systemPathDetail = systemTemplates();

		//get a list of theme templates
		var themeTemplates = require("./actions/templates-theme.js")
		var pathDetail = themeTemplates(files)

		//splice the rendered system list with theme templates instead
		var overideTemplates = require("./actions/templates-overide.js")
		var overideTemplates = overideTemplates(pathDetail, systemPathDetail)


		//make the returned markup ready to compile
		var markup = overideTemplates,
				head = markup.head,
				body = markup.body
		//make the compile funtion
		return markup;
	}

	this.systemPath = function(){
		return __dirname+"/system/";
	}

	this.compile = function(markup, obj){
		var head = obj["head"];
		var body = obj["body"];
		return "<html lang='FROM DB'>"+markup.head(obj.head)+markup.body(obj.body)+"</html>"
	}
}

saphireThemes = new saphireThemes();


module.exports = saphireThemes
